name: "build-test"
on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - master
      - 'releases/*'
    tags:
      - 'v*'

env:
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - id: checkout
      uses: actions/checkout@v4
    - id: build
      run: |
        npm install
    - id: format-check
      run: |
        npm run format-check
    - id: lint
      run: |
        npm run lint
    - uses: ./
      with:
        status: ${{ job.status }}
        channel: '#actions'
        message: lint error
      if: failure()

  test:
    runs-on: ubuntu-latest
    steps:
    - id: checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - uses: ./
      with:
        status: starting
        channel: '#actions'
    - id: dump_github
      name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - id: dump_job
      name: Dump job context
      env:
        JOB_CONTEXT: ${{ toJson(job) }}
      run: echo "$JOB_CONTEXT"
    - id: dump_steps
      name: Dump steps context
      env:
        STEPS_CONTEXT: ${{ toJson(steps) }}
      run: echo "$STEPS_CONTEXT"
    - id: test
      run: |
        npm install
        npm run test
    - uses: ./
      with:
        status: ${{ job.status }}
        steps: ${{ toJson(steps) }}
        channel: '#actions'
        config: __tests__/fixtures/slack-legacy.yml
      if: always()
    - uses: ./
      with:
        status: ${{ job.status }}
        steps: ${{ toJson(steps) }}
        channel: '#actions'
        config: __tests__/fixtures/slack-blocks.yml
      if: always()

  build:
    runs-on: ubuntu-latest
    steps:
    - id: checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - id: install-nodejs
      uses: actions/setup-node@v4
      with:
        node-version: 20
    - id: build
      run: |
        npm install
        npm run all
    - uses: ./
      with:
        status: ${{ job.status }}
        steps: ${{ toJson(steps) }}
        channel: '#actions'
      if: always()
